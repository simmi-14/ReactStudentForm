{"ast":null,"code":"var _jsxFileName = \"/home/simmii-14/formassignment/assignmentreact/src/screens/testU.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\"; //****************************************************************Checkbox ELEMENT\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox'; //****************************************************************RADIO ELEMENT\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup'; //****************************************************************Custom button ELEMENT\n\nimport Custom_Button from \"../components/button\"; //****************************************************************Design and Icon ELEMENT\n\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useStyles_testU } from \"../design/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn_Form = props => {\n  _s();\n\n  const classes = useStyles_testU();\n  const [user, setUser] = useState({});\n  const [allUsersData, setAllUsersData] = useState([]);\n  const [singleUser, setSingleUser] = useState(-1);\n  useEffect(() => {\n    let allUsersData = [];\n\n    try {\n      if (window.localStorage.getItem(\"users\")) allUsersData = window.localStorage.getItem(\"users\");\n\n      if (allUsersData.length && typeof allUsersData !== \"undefined\") {\n        allUsersData = JSON.parse(allUsersData);\n        setAllUsersData(allUsersData);\n      }\n\n      if (allUsersData.length && window.localStorage.getItem(\"edit_user\")) {\n        let userEdit = JSON.parse(window.localStorage.getItem(\"edit_user\"));\n        if (userEdit > -1 && userEdit < allUsersData.length) setUser(allUsersData[userEdit]);\n        setSingleUser(userEdit);\n      }\n    } catch (e) {\n      console.log(\"CAUGHT ERROR:Table\", e);\n    }\n  }, []);\n\n  const handleDataUpdate = (ele, key) => {\n    if (!key) key = ele.target.attributes.getNamedItem(\"id\").value;\n\n    if (ele.target.type === 'checkbox') {\n      let hobbies = { ...user\n      };\n      if (!hobbies.hasOwnProperty('hobby')) hobbies.hobby = [];\n      if (ele.target.checked && !hobbies.hobby.includes(ele.target.value)) hobbies.hobby.push(ele.target.value);else hobbies.hobby.splice(hobbies.hobby.indexOf(ele.target.value), 1);\n      setUser(hobbies);\n    } else {\n      setUser({ ...user,\n        [key]: ele.target.value\n      });\n    }\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    let error = [];\n    if (!(user.fname && user.lname)) error.push(\"No/Wrong Frist Name/Email\");\n    if (!user.email.includes('@')) error.push(\"Unformatted Email\");\n\n    if (error.length) {\n      alert(\"\" + error.join(', '));\n      return;\n    }\n\n    if (singleUser < 0) allUsersData.push(user);else allUsersData[singleUser] = user;\n    window.localStorage.setItem(\"users\", JSON.stringify(allUsersData));\n    props.history.push(\"/\");\n  };\n\n  const showUsers = () => {\n    // window.localStorage.setItem(\"edit_user\", -1);\n    props.history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      style: {\n        padding: 18\n      },\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '20%',\n            marging: 16,\n            padding: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(Custom_Button, {\n            type: \"button\",\n            name: \"Show Users List\",\n            onClick: () => showUsers()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          style: {\n            backgroundColor: \"#357a38\"\n          },\n          children: /*#__PURE__*/_jsxDEV(AssignmentIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"#121858\",\n              fontWeight: \"bold\"\n            },\n            children: \"Student Data Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          onSubmit: onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            type: \"text\",\n            name: \"user[fname]\",\n            value: user.fname ? user.fname : \"\",\n            onChange: handleDataUpdate,\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"fname\",\n            label: \"First Name\",\n            autoComplete: \"\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"text\",\n            name: \"user[lname]\",\n            value: user.lname ? user.lname : \"\",\n            onChange: handleDataUpdate,\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"lname\",\n            label: \"Last Name\",\n            autoComplete: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"text\",\n            name: \"user[email]\",\n            value: user.email ? user.email : \"\",\n            onChange: handleDataUpdate,\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"email\",\n            label: \"Email\",\n            autoComplete: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"number\",\n            name: \"user[mobile]\",\n            value: user.mobile ? user.mobile : \"\",\n            onChange: handleDataUpdate,\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"mobile\",\n            label: \"Mobile Phone\",\n            autoComplete: \"\",\n            maxLength: \"12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"password\",\n            name: \"user[password]\",\n            value: user.password ? user.password : \"\",\n            onChange: handleDataUpdate,\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"password\",\n            label: \"Password\",\n            autoComplete: \"current-password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h5\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"#121858\",\n                fontWeight: \"bold\",\n                alignSelf: \"left\"\n              },\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            \"aria-label\": \"user[gender]\",\n            name: \"user[gender]\",\n            id: \"gender\",\n            value: user.gender ? user.gender : \"\",\n            onChange: e => handleDataUpdate(e, 'gender'),\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"female\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 57\n              }, this),\n              label: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"male\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 55\n              }, this),\n              label: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"other\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 56\n              }, this),\n              label: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h5\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"#121858\",\n                fontWeight: \"bold\",\n                alignSelf: \"left\"\n              },\n              children: \"Hobby\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: user.hobby && user.hobby.includes('Reading') ? true : false,\n                onChange: e => handleDataUpdate(e, 'hobby'),\n                name: \"user[hobby][]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 26\n              }, this),\n              label: \"Reading\",\n              value: \"Reading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: user.hobby && user.hobby.includes('Coding') ? true : false,\n                onChange: e => handleDataUpdate(e, 'hobby'),\n                name: \"user[hobby][]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 26\n              }, this),\n              label: \"Coding\",\n              value: \"Coding\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: user.hobby && user.hobby.includes('Playing') ? true : false,\n                onChange: e => handleDataUpdate(e, 'hobby'),\n                name: \"user[hobby][]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 26\n              }, this),\n              label: \"Playing\",\n              value: \"Playing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Custom_Button, {\n            type: \"submit\",\n            name: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn_Form, \"OMz1cVgC+IxiG/5Qumv2F98Z3wE=\", false, function () {\n  return [useStyles_testU];\n});\n\n_c = SignIn_Form;\nexport default SignIn_Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn_Form\");","map":{"version":3,"sources":["/home/simmii-14/formassignment/assignmentreact/src/screens/testU.js"],"names":["React","useEffect","useState","Avatar","CssBaseline","TextField","Container","Card","FormGroup","FormControlLabel","Checkbox","Radio","RadioGroup","Custom_Button","AssignmentIcon","Typography","useStyles_testU","SignIn_Form","props","classes","user","setUser","allUsersData","setAllUsersData","singleUser","setSingleUser","window","localStorage","getItem","length","JSON","parse","userEdit","e","console","log","handleDataUpdate","ele","key","target","attributes","getNamedItem","value","type","hobbies","hasOwnProperty","hobby","checked","includes","push","splice","indexOf","onSubmit","event","preventDefault","error","fname","lname","email","alert","join","setItem","stringify","history","showUsers","root","padding","paper","width","marging","avatar","backgroundColor","color","fontWeight","form","mobile","password","alignSelf","gender"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\n\n//****************************************************************Checkbox ELEMENT\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n//****************************************************************RADIO ELEMENT\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n//****************************************************************Custom button ELEMENT\nimport Custom_Button from \"../components/button\";\n//****************************************************************Design and Icon ELEMENT\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useStyles_testU } from \"../design/styles\";\n\n\n\nconst SignIn_Form = (props) => {\n  const classes = useStyles_testU();\n\n  const [user, setUser] = useState({});\n  const [allUsersData, setAllUsersData] = useState([]);\n  const [singleUser, setSingleUser] = useState(-1);\n\n  useEffect(() => {\n    let allUsersData = [];\n    try {\n      if (window.localStorage.getItem(\"users\"))\n        allUsersData = window.localStorage.getItem(\"users\");\n      if (allUsersData.length && typeof allUsersData !== \"undefined\") {\n        allUsersData = JSON.parse(allUsersData);\n        setAllUsersData(allUsersData);\n      }\n\n      if (allUsersData.length && window.localStorage.getItem(\"edit_user\")) {\n        let userEdit = JSON.parse(window.localStorage.getItem(\"edit_user\"));\n        if (userEdit > -1 && userEdit < allUsersData.length)\n          setUser(allUsersData[userEdit]);\n        setSingleUser(userEdit);\n      }\n    } catch (e) {\n      console.log(\"CAUGHT ERROR:Table\", e);\n    }\n  }, []);\n\n  const handleDataUpdate = (ele, key) => {\n    if(!key)\n        key = ele.target.attributes.getNamedItem(\"id\").value;\n\n    if(ele.target.type === 'checkbox')\n    {\n      let hobbies = {...user};\n      if(!hobbies.hasOwnProperty('hobby'))\n        hobbies.hobby = [];\n      if(ele.target.checked && !(hobbies.hobby.includes(ele.target.value)))\n        hobbies.hobby.push(ele.target.value);\n      else\n        hobbies.hobby.splice(hobbies.hobby.indexOf(ele.target.value), 1);\n      setUser(hobbies);\n    }\n    else\n    {\n      setUser({\n        ...user,\n        [key]: ele.target.value,\n      });\n    }\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    let error = [];\n    if (!(user.fname && user.lname))\n      error.push(\"No/Wrong Frist Name/Email\");\n    if (!user.email.includes('@'))\n      error.push(\"Unformatted Email\");\n    if(error.length)\n    {\n      alert(\"\" +  error.join(', '));\n      return;\n    }\n    if (singleUser < 0) allUsersData.push(user);\n    else allUsersData[singleUser] = user;\n    window.localStorage.setItem(\"users\", JSON.stringify(allUsersData));\n    props.history.push(\"/\");\n  };\n\n  const showUsers = () => {\n    // window.localStorage.setItem(\"edit_user\", -1);\n    props.history.push(\"/\");\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <Card className={classes.root} style={{ padding: 18 }}>\n        <CssBaseline />\n        <div className={classes.paper}>\n          <div style={{width:'20%', marging:16, padding:16}}>\n            <Custom_Button\n                type={\"button\"}\n                name={\"Show Users List\"}\n                onClick={() => showUsers()}\n                />\n          </div>\n          <Avatar\n            className={classes.avatar}\n            style={{ backgroundColor: \"#357a38\" }}\n          >\n            <AssignmentIcon />\n          </Avatar>\n          <Typography component=\"h1\">\n            <span style={{ color: \"#121858\", fontWeight: \"bold\" }}>\n              Student Data Form\n            </span>\n          </Typography>\n\n          <form className={classes.form} onSubmit={onSubmit}>\n            <TextField\n              type=\"text\"\n              name=\"user[fname]\"\n              value={user.fname ? user.fname : \"\"}\n              onChange={handleDataUpdate}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"fname\"\n              label=\"First Name\"\n              autoComplete=\"\"\n              autoFocus\n            />\n\n            <TextField\n              type=\"text\"\n              name=\"user[lname]\"\n              value={user.lname ? user.lname : \"\"}\n              onChange={handleDataUpdate}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"lname\"\n              label=\"Last Name\"\n              autoComplete=\"\"\n            />\n\n            <TextField\n              type=\"text\"\n              name=\"user[email]\"\n              value={user.email ? user.email : \"\"}\n              onChange={handleDataUpdate}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              autoComplete=\"email\"\n            />\n\n            <TextField\n              type=\"number\"\n              name=\"user[mobile]\"\n              value={user.mobile ? user.mobile : \"\"}\n              onChange={handleDataUpdate}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"mobile\"\n              label=\"Mobile Phone\"\n              autoComplete=\"\"\n              maxLength=\"12\"\n            />\n\n            <TextField\n              type=\"password\"\n              name=\"user[password]\"\n              value={user.password ? user.password : \"\"}\n              onChange={handleDataUpdate}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"password\"\n              label=\"Password\"\n              autoComplete=\"current-password\"\n            />\n\n            <Typography component=\"h5\">\n              <span style={{ color: \"#121858\", fontWeight: \"bold\", alignSelf: \"left\" }}>\n              Gender\n              </span>\n            </Typography>\n            <RadioGroup aria-label=\"user[gender]\" name=\"user[gender]\" id=\"gender\" value={user.gender ? user.gender : \"\"} onChange={(e)=>handleDataUpdate(e, 'gender')}>\n              <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n              <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n              <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n            </RadioGroup>\n\n            <Typography component=\"h5\">\n              <span style={{ color: \"#121858\", fontWeight: \"bold\", alignSelf: \"left\" }}>\n              Hobby\n              </span>\n            </Typography>\n            <FormGroup>\n              <FormControlLabel\n                control={<Checkbox checked={(user.hobby && user.hobby.includes('Reading')) ? true : false} onChange={(e)=>handleDataUpdate(e, 'hobby')} name=\"user[hobby][]\" />}\n                label=\"Reading\" value=\"Reading\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={(user.hobby && user.hobby.includes('Coding')) ? true : false} onChange={(e)=>handleDataUpdate(e, 'hobby')} name=\"user[hobby][]\" />}\n                label=\"Coding\" value=\"Coding\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={(user.hobby && user.hobby.includes('Playing')) ? true : false} onChange={(e)=>handleDataUpdate(e, 'hobby')} name=\"user[hobby][]\" />}\n                label=\"Playing\" value=\"Playing\"\n              />\n            </FormGroup>\n\n            <Custom_Button\n              type={\"submit\"}\n              name={\"Submit\"}\n            />\n          </form>\n        </div>\n      </Card>\n    </Container>\n  );\n};\n\nexport default SignIn_Form;\n"]},"metadata":{},"sourceType":"module"}