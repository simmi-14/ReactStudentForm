{"ast":null,"code":"var _jsxFileName = \"/home/simmii-14/formassignment/assignmentreact/src/components/formcontrollcheckbox.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  formControl: {\n    margin: theme.spacing(3)\n  }\n}));\nexport default function CheckboxesGroup() {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    Reading: true,\n    Coding: false,\n    Playing: false\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const {\n    Reading,\n    Coding,\n    Playing\n  } = state;\n  const error = [Reading, Coding, Playing].filter(v => v).length !== 2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      required: true,\n      error: error,\n      component: \"fieldset\",\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Pick two\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: gilad,\n            onChange: handleChange,\n            name: \"Reading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 22\n          }, this),\n          label: \"Reading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: jason,\n            onChange: handleChange,\n            name: \"Coding\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 22\n          }, this),\n          label: \"Coding\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: antoine,\n            onChange: handleChange,\n            name: \"Playing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 22\n          }, this),\n          label: \"Playing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: \"You can display an error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckboxesGroup, \"qCX+2A7TJbA0xiGsq4tnG25U4tM=\", false, function () {\n  return [useStyles];\n});\n\n_c = CheckboxesGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxesGroup\");","map":{"version":3,"sources":["/home/simmii-14/formassignment/assignmentreact/src/components/formcontrollcheckbox.js"],"names":["React","makeStyles","FormLabel","FormControl","FormGroup","FormControlLabel","FormHelperText","Checkbox","useStyles","theme","root","display","formControl","margin","spacing","CheckboxesGroup","classes","state","setState","useState","Reading","Coding","Playing","handleChange","event","target","name","checked","error","filter","v","length","gilad","jason","antoine"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n}));\n\nexport default function CheckboxesGroup() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    Reading: true,\n    Coding: false,\n    Playing: false,\n  });\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  const { Reading,Coding,Playing } = state;\n  const error = [Reading,Coding,Playing].filter((v) => v).length !== 2;\n\n  return (\n    <div className={classes.root}>\n      <FormControl required error={error} component=\"fieldset\" className={classes.formControl}>\n      {/* <FormLabel>Hobbies</FormLabel> */}\n        <FormLabel component=\"legend\">Pick two</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={gilad} onChange={handleChange} name=\"Reading\" />}\n            label=\"Reading\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={jason} onChange={handleChange} name=\"Coding\" />}\n            label=\"Coding\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={antoine} onChange={handleChange} name=\"Playing\" />}\n            label=\"Playing\"\n          />\n        </FormGroup>\n        <FormHelperText>You can display an error</FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}