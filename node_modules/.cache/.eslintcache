[{"/home/simmii-14/formassignment/assignmentreact/src/index.js":"1","/home/simmii-14/formassignment/assignmentreact/src/reportWebVitals.js":"2","/home/simmii-14/formassignment/assignmentreact/src/App.js":"3","/home/simmii-14/formassignment/assignmentreact/src/screens/form.js":"4","/home/simmii-14/formassignment/assignmentreact/src/screens/table.js":"5","/home/simmii-14/formassignment/assignmentreact/src/components/button.js":"6","/home/simmii-14/formassignment/assignmentreact/src/design/styles.js":"7"},{"size":589,"mtime":1631120437645,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1631043259634,"results":"10","hashOfConfig":"9"},{"size":359,"mtime":1631133571469,"results":"11","hashOfConfig":"9"},{"size":8128,"mtime":1631133487064,"results":"12","hashOfConfig":"9"},{"size":5248,"mtime":1631132898678,"results":"13","hashOfConfig":"9"},{"size":668,"mtime":1631132455782,"results":"14","hashOfConfig":"9"},{"size":1165,"mtime":1631126285634,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"142pce6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/home/simmii-14/formassignment/assignmentreact/src/index.js",[],["34","35"],"/home/simmii-14/formassignment/assignmentreact/src/reportWebVitals.js",[],"/home/simmii-14/formassignment/assignmentreact/src/App.js",[],"/home/simmii-14/formassignment/assignmentreact/src/screens/form.js",["36","37"],"import React, { useEffect, useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\n\n//****************************************************************Checkbox ELEMENT\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n//****************************************************************RADIO ELEMENT\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n//****************************************************************Custom button ELEMENT\nimport Custom_Button from \"../components/button\";\n//****************************************************************Design and Icon ELEMENT\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useStyles_testU } from \"../design/styles\";\n\nconst SignIn_Form = (props) => {\n  const classes = useStyles_testU();\n\n  const [user, setUser] = useState({});\n  const [allUsersData, setAllUsersData] = useState([]);\n  const [singleUser, setSingleUser] = useState(-1);\n\n  useEffect(() => {\n    let allUsersData = [];\n    try {\n      if (window.localStorage.getItem(\"users\"))\n        allUsersData = window.localStorage.getItem(\"users\");\n      if (allUsersData.length && typeof allUsersData !== \"undefined\") {\n        allUsersData = JSON.parse(allUsersData);\n        setAllUsersData(allUsersData);\n      }\n\n      if (allUsersData.length && window.localStorage.getItem(\"edit_user\")) {\n        let userEdit = JSON.parse(window.localStorage.getItem(\"edit_user\"));\n        if (userEdit > -1 && userEdit < allUsersData.length)\n          setUser(allUsersData[userEdit]);\n        setSingleUser(userEdit);\n      }\n    } catch (e) {\n      console.log(\"CAUGHT ERROR:Table\", e);\n    }\n  }, []);\n\n  const handleDataUpdate = (ele, key) => {\n    if(!key)\n        key = ele.target.attributes.getNamedItem(\"id\").value;\n\n    if(ele.target.type === 'checkbox')\n    {\n      let hobbies = {...user};\n      if(!hobbies.hasOwnProperty('hobby'))\n        hobbies.hobby = [];\n      if(ele.target.checked && !(hobbies.hobby.includes(ele.target.value)))\n        hobbies.hobby.push(ele.target.value);\n      else\n        hobbies.hobby.splice(hobbies.hobby.indexOf(ele.target.value), 1);\n      setUser(hobbies);\n    }\n    else\n    {\n      setUser({\n        ...user,\n        [key]: ele.target.value,\n      });\n    }\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    let error = [];\n    if (!(user.fname && user.lname))\n      error.push(\"No/Wrong Frist Name/Email\");\n    if (!user.email.includes('@'))\n      error.push(\"Unformatted Email\");\n    if(error.length)\n    {\n      alert(\"\" +  error.join(', '));\n      return;\n    }\n    if (singleUser < 0) allUsersData.push(user);\n    else allUsersData[singleUser] = user;\n    window.localStorage.setItem(\"users\", JSON.stringify(allUsersData));\n    props.history.push(\"/\");\n  };\n\n  const showUsers = () => {\n    // window.localStorage.setItem(\"edit_user\", -1);\n    props.history.push(\"/\");\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <div style={{width:'40%', marging:16, padding:16}}>\n            <Custom_Button\n                type={\"button\"}\n                name={\"Show Users List\"}\n                onClick={() => showUsers()}\n                />\n          </div>\n      <Card className={classes.root} style={{ padding: 18 }}>\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar\n            className={classes.avatar}\n            style={{ backgroundColor: \"#357a38\" }}\n          >\n            <AssignmentIcon />\n          </Avatar>\n          <Typography component=\"h1\">\n            <span style={{ color: \"#121858\", fontWeight: \"bold\" }}>\n              Student Data Form\n            </span>\n          </Typography>\n\n          <form className={classes.form} onSubmit={onSubmit}>\n            <TextField\n              type=\"text\"\n              name=\"user[fname]\"\n              value={user.fname ? user.fname : \"\"}\n              onChange={handleDataUpdate}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"fname\"\n              label=\"First Name\"\n              autoComplete=\"\"\n              autoFocus\n            />\n\n            <TextField\n              type=\"text\"\n              name=\"user[lname]\"\n              value={user.lname ? user.lname : \"\"}\n              onChange={handleDataUpdate}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"lname\"\n              label=\"Last Name\"\n              autoComplete=\"\"\n            />\n\n            <TextField\n              type=\"text\"\n              name=\"user[email]\"\n              value={user.email ? user.email : \"\"}\n              onChange={handleDataUpdate}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              autoComplete=\"email\"\n            />\n\n            <TextField\n              type=\"number\"\n              name=\"user[mobile]\"\n              value={user.mobile ? user.mobile : \"\"}\n              onChange={handleDataUpdate}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"mobile\"\n              label=\"Mobile Phone\"\n              autoComplete=\"\"\n              maxLength=\"12\"\n            />\n\n            <TextField\n              type=\"password\"\n              name=\"user[password]\"\n              value={user.password ? user.password : \"\"}\n              onChange={handleDataUpdate}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"password\"\n              label=\"Password\"\n              autoComplete=\"current-password\"\n            />\n\n            <Typography component=\"h5\">\n              <span style={{ color: \"#121858\", fontWeight: \"bold\", alignSelf: \"left\" }}>\n              Gender\n              </span>\n            </Typography>\n            <RadioGroup aria-label=\"user[gender]\" name=\"user[gender]\" id=\"gender\" value={user.gender ? user.gender : \"\"} onChange={(e)=>handleDataUpdate(e, 'gender')}>\n              <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n              <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n              <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n            </RadioGroup>\n\n            <Typography component=\"h5\">\n              <span style={{ color: \"#121858\", fontWeight: \"bold\", alignSelf: \"left\" }}>\n              Hobby\n              </span>\n            </Typography>\n            <FormGroup>\n              <FormControlLabel\n                control={<Checkbox checked={(user.hobby && user.hobby.includes('Reading')) ? true : false} onChange={(e)=>handleDataUpdate(e, 'hobby')} name=\"user[hobby][]\" />}\n                label=\"Reading\" value=\"Reading\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={(user.hobby && user.hobby.includes('Coding')) ? true : false} onChange={(e)=>handleDataUpdate(e, 'hobby')} name=\"user[hobby][]\" />}\n                label=\"Coding\" value=\"Coding\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={(user.hobby && user.hobby.includes('Playing')) ? true : false} onChange={(e)=>handleDataUpdate(e, 'hobby')} name=\"user[hobby][]\" />}\n                label=\"Playing\" value=\"Playing\"\n              />\n            </FormGroup>\n\n            <Custom_Button\n              type={\"submit\"}\n              name={\"Submit\"}\n              onClick={() => \"\"}\n            />\n          </form>\n        </div>\n      </Card>\n    </Container>\n  );\n};\n\nexport default SignIn_Form;\n","/home/simmii-14/formassignment/assignmentreact/src/screens/table.js",["38","39"],"import React, { useEffect, useState } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ControlPointIcon from \"@material-ui/icons/ControlPoint\";\n\nimport Custom_Button from \"../components/button\";\n\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function CustomizedTables(props) {\n  const classes = useStyles();\n  const [user, setUser] = useState({});\n  useEffect(() => {\n    let allUsersData = [];\n    try {\n      if (window.localStorage.getItem(\"users\"))\n        allUsersData = window.localStorage.getItem(\"users\");\n      if (allUsersData.length && typeof allUsersData !== \"undefined\") {\n        allUsersData = JSON.parse(allUsersData);\n        // setAllUsersData(allUsersData);\n        setUser(allUsersData);\n      }\n    } catch (e) {\n      console.log(\"CAUGHT ERROR:Table\", e);\n    }\n  }, []);\n  const editUser = (index) => {\n    window.localStorage.setItem(\"edit_user\", index);\n    props.history.push(\"/form\");\n  };\n\n  const addnewUser = () => {\n    window.localStorage.setItem(\"edit_user\", -1);\n    props.history.push(\"/form\");\n  };\n\n  const removeUser = (index) => {\n    let user1 = [...user];\n    user1.splice(index, 1);\n    setUser(user1);\n    window.localStorage.setItem(\"users\", JSON.stringify(user1));\n  };\n  return (\n      <div>\n          <div style={{width:'20%', marging:16, padding:16}}>\n            <Custom_Button\n                type={\"button\"}\n                name={\"Add New Entry\"}\n                onClick={() => addnewUser()}\n                />\n        </div>\n        {/*\n            <IconButton\n                onClick={() => addnewUser()}\n                aria-label=\"add\"\n            >\n                <ControlPointIcon />\n            </IconButton>\n        */}\n        <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Name</StyledTableCell>\n            <StyledTableCell align=\"right\">Mobile</StyledTableCell>\n            <StyledTableCell align=\"right\">Email</StyledTableCell>\n            <StyledTableCell align=\"right\">Gender</StyledTableCell>\n            <StyledTableCell align=\"right\">Hobbies</StyledTableCell>\n            <StyledTableCell align=\"right\">Actions</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {user.length > 0\n            ? user.map((row, index) => {\n                return (\n                  <StyledTableRow key={index}>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                      {row.fname} {row.lname}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      {row.mobile}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">{row.email}</StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      {row.gender}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      {row.hobby.join(\", \")}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      <div>\n                        <IconButton\n                          color=\"secondary\"\n                          aria-label=\"delete\"\n                          onClick={() => removeUser(index)}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                        <IconButton\n                          onClick={() => editUser(index)}\n                          color=\"primary\"\n                          aria-label=\"edit\"\n                        >\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </StyledTableCell>\n                  </StyledTableRow>\n                );\n              })\n            : null}\n        </TableBody>\n        <TableFooter>\n            {\n                (!user.length > 0)\n                ?\n                    <TableRow>\n                        <StyledTableCell>No data to show</StyledTableCell>\n                    </TableRow>\n                : null\n            }\n        </TableFooter>\n      </Table>\n    </TableContainer>\n    </div>\n  );\n}\n","/home/simmii-14/formassignment/assignmentreact/src/components/button.js",[],"/home/simmii-14/formassignment/assignmentreact/src/design/styles.js",["40"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n    submit_btn: {\n      background: theme.background,\n      border: 0,\n      fontSize: 16,\n      borderRadius: 3,\n      boxShadow: theme.boxShadow,\n      color: 'white',\n      height: 48,\n      padding: '0 30px',\n      width:\"100%\",\n      elevation:10,\n      ///\n      '&:hover': {\n        backgroundColor: '#0069d9',\n        borderColor: 'red',\n        boxShadow: 'none',\n        opacity: 0.8\n      },\n      '&:active': {\n        boxShadow: 'none',\n        backgroundColor: '#0062cc',\n        borderColor: '#005cbf',\n      },\n      '&:focus': {\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n      },\n    },    \n}));\n\n\nexport const useStyles_testU = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n\n}));\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":100,"column":13,"nodeType":"47","endLine":104,"endColumn":19},{"ruleId":"45","severity":1,"message":"46","line":225,"column":13,"nodeType":"47","endLine":229,"endColumn":15},{"ruleId":"48","severity":1,"message":"49","line":14,"column":8,"nodeType":"50","messageId":"51","endLine":14,"endColumn":24},{"ruleId":"45","severity":1,"message":"46","line":79,"column":13,"nodeType":"47","endLine":83,"endColumn":19},{"ruleId":"48","severity":1,"message":"52","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":13},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"react/jsx-pascal-case","Imported JSX component Custom_Button must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'ControlPointIcon' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]